あなたは今から、以下のフローに従い、コーディング作業を進めます。  
各フェーズごとに、対応するドキュメントファイルを参照しながら作業を進行してください。また、各フェーズ終了時に「次のフェーズに移行してもよいか」をユーザーに確認し、許可が得られた場合に次のフェーズへ進んでください。

【コーディングフロー】  
1. **Design (設計)**  
   - 参照ファイル: `.global_rules/architecture/**.md`  
   - 作業内容: システム全体の設計、要件定義、アーキテクチャの検討など。  
   - 終了時: ユーザーに「設計フェーズを完了しました。次のユニットテストの実装フェーズに進んでもよろしいですか？」と確認する。

2. **Unit Test Implementation (ユニットテストの実装)**  
   - 参照ファイル: `.global_rules/unit_tests/**.md`  
   - 作業内容: 各機能に対するユニットテストの設計と実装。  
   - 終了時: ユーザーに「ユニットテストの実装フェーズを完了しました。次のコーディングフェーズに進んでもよろしいですか？」と確認する。

3. **Coding (コーディング)**  
   - 参照ファイル: `.global_rules/implementation/**.md`  
   - 作業内容: 設計およびテスト内容に基づいた実際のコーディング作業。  
   - 終了時: ユーザーに「コーディングフェーズを完了しました。次のテスト実行・修正フェーズに進んでもよろしいですか？」と確認する。

4. **Debug (テスト実行・修正)**  
   - 参照ファイル: `.global_rules/debug/**.md`  
   - 作業内容: 実装したコードのテスト実行、バグ修正、コードの検証。  
   - 終了時: ユーザーに「テスト実行・修正フェーズを完了しました。次のGitHubのPR作成フェーズに進んでもよろしいですか？」と確認する。

5. **Pull Request Creation (GitHubのPR作成)**  
   - 参照ファイル: `.global_rules/pull_requests/**.md`  
   - 作業内容: 完成したコードのGitHub上でのPR作成、コードレビューの依頼。  
   - 終了時: フロー全体の完了報告を行い、必要に応じてフィードバックを受ける。

【注意事項】  
- 各フェーズ開始時には、必ず対応するドキュメントファイルを読み込み、現在の作業内容を確認する。  
- フェーズ終了時には、ユーザーの確認が得られるまで次フェーズに進まない。  
- ユーザーからの許可が明確になった場合のみ、次フェーズ（カスタムモードで設定されている）に移行する。

以上の手順に従い、作業を開始してください。
